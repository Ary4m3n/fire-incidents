---
title: "An Analysis of a Rising Trend in Dollar Loss in Fire Incidents With and Without Sprinkler Systems in Toronto over a decade (2011-2022)"
author: 
  - Aryaman Sharma
thanks: "Code and data are available at: https://github.com/Ary4m3n/fire-incidents.git"
date: today
date-format: long
abstract: "A Fire Incidents dataset was used to assess the general trend in dollar loss in fire incidents and the impact of existence of sprinkler systems installed across the city of Toronto. Based on the analysis, a general rise over the years in the dollar loss in fire incidents as well as a massive amount of loss to property was found wherever sprinkler systems were not installed. This paper suggests that an installation of sprinkler systems will help reduce the impact of fire incidents on loss to property in Toronto."
format: pdf
toc: true
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(palmerpenguins)
```


# Introduction
The Great Fire of Toronto in 1904 caused mass destruction. The fire demolished around 20 acres of the industrial area in the city of Toronto, demolishing at least 98 buildings, causing a dollar loss of $10 million and leaving numerous thousands unemployed [@greatFire]. Since then we have seen an improvement in city codes and policies, better civil planning and extensive training of firefighters [@fireMedium]. Till date, the Toronto Fire Services report approximately 10,000 fires each year which is of immense concern to the city of Toronto and its residents [@fireData].

The Fire Incidents data of Toronto includes incident reports of fire incidents as defined by the Ontario Fire Marshal from 2011-2022 [@openData]. This paper delves deeper into the trend of estimated dollar loss in fire incidents in the city of Toronto from 2011-2022 and also analyses the impact of an installation of sprinkler systems on the dollar loss. The aim of the paper is to analyse the impact of better planning, specifically an installation of sprinkler systems, on the extent of loss faced by the residents of Toronto. 

In this paper, Fire Incidents data [@openData] was used to first explore if there is a trend in the estimated dollar loss over the years, and then was used to find any correlation between better civil planning, i.e. the installation of sprinkler systems and a lesser loss of property. It was found that there is a general rising trend in the dollar loss between 2011 and 2022. The paper also found that the dollar loss was drastically higher for fire incidents where there was no sprinkler system installed. This leads us to make an important judgement that better civil planning helps reduce the impact of such unfortunate events.

This paper is structured using the following sections: Data, Results and Discussion In the Data (@sec-data) section, the data source of the dataset from Open Data Toronto [@openData] is discussed and the data cleaning process is outlined. In the Results (@sec-results) section, the paper summarizes the data findings and relevant graphs of the trends observed. The paper ends with the Discussion (@sec-discussion) section, where the findings of the paper have been analysed and delved deeper into, and a further scope for the paper has been discussed.

# Data {#sec-data}

The data analysed in this paper was from Open Data Toronto [@openData]. The data was cleaned and analysed using the open source `R` programming language [@citeR]. R libraries and packages such as `opendatatoronto` [@openDataToronto], `tidyverse` [@citeTidyverse], `janitor` [@citeJanitor], `ggplot2` [@citeGgplot], `knitr` [@citeKnitr], `readr` [@citeReadr] and `dplyr` [@citeDplyr]. In the following sections, we will discuss the raw data (@sec-data-raw) and then move on to discussing the data cleaning process (@sec-data-clean). 

## Raw Fire Incidents Data {#sec-data-raw}

The raw data for this paper was obtained from Open Data Toronto [@openData] and we specifically looked at the Fire Incidents Data provided by the Ontario Fire Marshal from 2011-2022. We also looked at another data set related to this topic, Fire Services Incident Data [@openDataOther] but that data set firstly was last refreshed in 2019 and had been retired and replaced with the data set we used. 

The raw data had loads of information (that was mainly unnecessary to us for this paper), which mainly included the area of origin, casualities, persons rescued, estimated dollar loss, fire incident type, fire timing, intersection (location), cause, sprinkler system presence etc. For this paper specifically, to observe and analyse the trend in dollar loss and the effect of better civil planning (i.e. existence of sprinkler systems), we did not require such a plethora of variables. The raw data set contains 2,357,639 data entries and 43 variables. Due to the size of the dataset, we could not include a table outlining the structure of the dataset. 

In the next section (@sec-data-clean), we will outline the data-cleaning process and also show the first few rows of the cleaned data.


## Cleaning Fire Incidents Data {#sec-data-clean}

As stated above in (@sec-data-raw), we cleaned the data to cater to our needs of analyzing the trend in dollar loss and the effects of better civil planning. Specifically, we only kept 3 variables, the estimated dollar loss, the year in which the incident took place and sprinkler system presence which outlines whether a sprinkler system had been installed in the place where the incident took place. @tbl-cleaned shows the structure of the cleaned data by presenting the first 6 datapoints or rows. 

Here, in order to obtain this cleaned data table, I got the year of the incident from the `alarm_time` variable in the raw data and cleaned the sprinkler system presence column to only show 4 unique statuses, "No sprinkler system", "Full sprinkler system present", "Undetermined" and "NA" as shown clearly in @tbl-cleaned using `R` [@citeR]. @tbl-cleaned shows the head of the cleaned data.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

cleaned_fire_data <- read_csv("../data/cleaned_data.csv", show_col_types = FALSE)
```
```{r}
#| echo: false
#| eval: true
#| label: tbl-cleaned
#| tbl-cap: "Cleaned Data showing the first 6 rows"
#| warning: false

library(knitr)

kable(head(cleaned_fire_data))
# I read on how to add a table using knitr from ChatGPT 4, its referenced to in usage.txt.
```

Now that we have cleaned our raw fire incidents data and have generated a clean table. We will go on to the Results section (@sec-results) and look at the trend generated for the dollar loss over the years, 2011-2022 (@sec-results-year), and then look at the effect of the presence of sprinkler systems on the property or dollar loss (@sec-results-sprinkler).

# Results {#sec-results}

## Trend in Dollar Loss over 2011-2022 in Fire Incidents {#sec-results-year}

@tbl-trend shows the table of the total estimated dollar loss over the years 2011-2022.
```{r}
#| echo: false
#| eval: true
#| label: tbl-trend
#| tbl-cap: "Trend"
#| warning: false
#| message: false

cleaned_fire_data_trend <- cleaned_fire_data |>
  group_by(Year) |>
  summarise(`Dollar Loss` = sum(`Dollar Loss`))

cleaned_fire_data_trend$`Dollar Loss in Millions` <- cleaned_fire_data_trend$`Dollar Loss` / 1000000
cleaned_fire_data_trend$Year <- as.numeric(cleaned_fire_data_trend$Year)

kable(cleaned_fire_data_trend)
```

@fig-dollar-loss shows the bar plot of the @tbl-trend where the Dollar Loss in millions is plotted against the years 2011-2022.
```{r}
#| label: fig-dollar-loss
#| fig-cap: Year vs Dollar Loss ($million) in Fire Incidents in Toronto (2011-2022)
#| echo: false

ggplot(cleaned_fire_data_trend, aes(x = `Year`, y = `Dollar Loss in Millions`)) +
  geom_col(alpha = 1.5, fill = "darkorange") +
  theme_minimal() +
  scale_x_continuous(breaks = 2011:2022) + 
  labs(x = "Year", y = "Dollar Loss in Millions")
```


## Effect of presence of Sprinkler Systems on Dollar Loss {#sec-results-sprinkler}

@tbl-full shows the table of Dollar Loss over the years in the presence of proper sprinkler systems.
```{r}
#| echo: false
#| eval: true
#| label: tbl-full
#| tbl-cap: "Full Sprinkler System Present"
#| warning: false
#| message: false

cleaned_fire_data_full <- cleaned_fire_data |>
  filter(`Sprinkler System Presence`=="Full sprinkler system present") |>
  group_by(Year) |>
  summarise(`Dollar Loss` = sum(`Dollar Loss`))

cleaned_fire_data_full$`Dollar Loss in Millions` <- cleaned_fire_data_full$`Dollar Loss` / 1000000

kable(cleaned_fire_data_full)

```

@tbl-none shows the table of Dollar Loss over the years when there were no sprinkler systems present.
```{r}
#| echo: false
#| eval: true
#| label: tbl-none
#| tbl-cap: "No Sprinkler System Present"
#| warning: false
#| message: false

cleaned_fire_data_none <- cleaned_fire_data |>
  filter(`Sprinkler System Presence`=="No sprinkler system") |>
  group_by(Year) |>
  summarise(`Dollar Loss` = sum(`Dollar Loss`))

cleaned_fire_data_none$`Dollar Loss in Millions` <- cleaned_fire_data_none$`Dollar Loss` / 1000000

kable(cleaned_fire_data_none)
```




Some of our data is of penguins (@fig-bills), from @palmerpenguins.

```{r}
#| label: fig-bills
#| fig-cap: Bills of penguins
#| echo: false

ggplot(penguins, aes(x = island, fill = species)) +
  geom_bar(alpha = 0.8) +
  scale_fill_manual(values = c("darkorange","purple","cyan4"),
                    guide = "none") +
  theme_minimal() +
  facet_wrap(~species, ncol = 1) +
  coord_flip()
```

Talk more about it.

And also planes (@fig-planes). (You can change the height and width, but don't worry about doing that until you have finished every other aspect of the paper - Quarto will try to make it look nice and the defaults usually work well once you have enough text.)

```{r}
#| label: fig-planes
#| fig-cap: Relationship between wing length and width
#| echo: false
#| warning: false
#| message: false

analysis_data <- read_csv(here::here("outputs/data/analysis_data.csv"))

analysis_data |> 
  ggplot(aes(x = width, y = length)) +
  geom_point(alpha = 0.8) +
  theme_minimal() +
  labs(x = "Wing width (mm)",
       y = "Wing length (mm)")
```

Talk way more about it. 



# Model

The goal of our modelling strategy is twofold. Firstly,...

Here we briefly describe the Bayesian analysis model used to investigate... Background details and diagnostics are included in [Appendix -@sec-model-details].

## Model set-up

Define $y_i$ as the number of seconds that the plane remained aloft. Then $\beta_i$ is the wing width and $\gamma_i$ is the wing length, both measured in millimeters.  

\begin{align} 
y_i|\mu_i, \sigma &\sim \mbox{Normal}(\mu_i, \sigma) \\
\mu_i &= \alpha + \beta_i + \gamma_i\\
\alpha &\sim \mbox{Normal}(0, 2.5) \\
\beta &\sim \mbox{Normal}(0, 2.5) \\
\gamma &\sim \mbox{Normal}(0, 2.5) \\
\sigma &\sim \mbox{Exponential}(1)
\end{align}

We run the model in R [@citeR] using the `rstanarm` package of @rstanarm. We use the default priors from `rstanarm`.


### Model justification

We expect a positive relationship between the size of the wings and time spent aloft. In particular...

We can use maths by including latex between dollar signs, for instance $\theta$.



Our results are summarized in @tbl-modelresults.

```{r}
#| echo: false
#| eval: true
#| warning: false
#| message: false

library(rstanarm)

first_model <-
  readRDS(file = here::here("outputs/models/first_model.rds"))
```

```{r}
#| echo: false
#| eval: true
#| label: tbl-modelresults
#| tbl-cap: "Explanatory models of flight time based on wing width and wing length"
#| warning: false

modelsummary::modelsummary(
  list(
    "First model" = first_model
  ),
  statistic = "mad",
  fmt = 2
)
```




# Discussion {#sec-discussion}

## First discussion point {#sec-first-point}

If my paper were 10 pages, then should be be at least 2.5 pages. The discussion is a chance to show off what you know and what you learnt from all this. 

## Second discussion point

## Third discussion point

## Weaknesses and next steps

Weaknesses and next steps should also be included.

\newpage

\appendix

# Appendix {-}


# Additional data details

# Model details {#sec-model-details}

## Posterior predictive check

In @fig-ppcheckandposteriorvsprior-1 we implement a posterior predictive check. This shows...

In @fig-ppcheckandposteriorvsprior-2 we compare the posterior with the prior. This shows... 

```{r}
#| eval: true
#| echo: false
#| message: false
#| warning: false
#| label: fig-ppcheckandposteriorvsprior
#| layout-ncol: 2
#| fig-cap: "Examining how the model fits, and is affected by, the data"
#| fig-subcap: ["Posterior prediction check", "Comparing the posterior with the prior"]

pp_check(first_model) +
  theme_classic() +
  theme(legend.position = "bottom")

posterior_vs_prior(first_model) +
  theme_minimal() +
  scale_color_brewer(palette = "Set1") +
  theme(legend.position = "bottom") +
  coord_flip()
```

## Diagnostics

@fig-stanareyouokay-1 is a trace plot. It shows... This suggests...

@fig-stanareyouokay-2 is a Rhat plot. It shows... This suggests...

```{r}
#| echo: false
#| eval: true
#| message: false
#| warning: false
#| label: fig-stanareyouokay
#| fig-cap: "Checking the convergence of the MCMC algorithm"
#| fig-subcap: ["Trace plot", "Rhat plot"]
#| layout-ncol: 2

plot(first_model, "trace")

plot(first_model, "rhat")
```



\newpage


# References


